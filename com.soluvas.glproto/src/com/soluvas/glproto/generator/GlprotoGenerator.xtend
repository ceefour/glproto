/*
 * generated by Xtext
 */
package com.soluvas.glproto.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import java.util.logging.Logger
import org.eclipse.xtext.generator.GeneratorUtil
import com.soluvas.glproto.glproto.Model
import com.soluvas.glproto.glproto.File
import java.io.FileInputStream
import org.eclipse.xtext.util.StringInputStream
import java.io.SequenceInputStream
import net.danieldietrich.xtext.bifsa.IBiFileSystemAccess
import net.danieldietrich.xtext.generator.protectedregions.RegionParserFactory

class GlprotoGenerator implements IGenerator {
	
	IBiFileSystemAccess bfsa
	Model model
	
	/**
	 * Requires ExtendedFileSystemAccess
	 */
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		GeneratorUtils::check(fsa)
		bfsa = fsa as IBiFileSystemAccess
		model = resource.contents.get(0) as Model
		for (pkg : model.packages) {
			generatePackage(pkg)
		}
	}
	
	def void generatePackage(com.soluvas.glproto.glproto.Package pkg) {
		for (file : pkg.files) {
			generateFile(pkg, file)
		}
	}
	
	// this should be "generated"
	def void generateFile(com.soluvas.glproto.glproto.Package pkg, File file) {
		var pkgPath = pkg.name.replace(".", "/")
		var fileName = pkgPath + "/" + file.name + ".java"
		var generated = '''
		import something;
		
		public class DoSomething {
			
			«renderMethods»
			
		}
		'''
		var parser = RegionParserFactory::createDefaultJavaParser()
		RegionUtils::generateProtectableFile(fileName, bfsa, parser, generated.toString)
	}
	
	// generated
	def renderMethods() {
		'''
		«renderCoffeeMethod("Java")»
		'''
	}
	
	// generated
	def renderCoffeeMethod(String flavor) {
		'''
		public void makeJavaCoffee() {
			«renderCoffeeMethodBody(flavor)»
		}
		'''
	}
	
	// this is not generated, and developer must choose to "override" this method
	// (although it should be overridden by default)
	def renderCoffeeMethodBody(String flavor) {
		'''		
		/*PROTECTED REGION ID(makeCoffee) START*/
		// TODO: please implement your business logic here!
		/*PROTECTED REGION END*/
		'''		
	}
}
